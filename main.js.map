{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./assets/js/builderHTML.js","webpack:///./assets/js/helper.js","webpack:///./assets/js/index.js"],"names":[],"mappings":";QAAA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;;AClFA;AAAA;AAAA;AAAgC;;AAEhC;AACA;AACA;AACA,yCAAyC,kBAAkB,sBAAsB,mBAAmB;AACpG,KAAK;;AAEL;AACA;AACA;AACA,8BAA8B,8CAAM,iCAAiC,GAAG,8CAAM,iCAAiC;AAC/G;;AAEA,cAAc,YAAY,IAAI,cAAc,GAAG,cAAc,SAAS,aAAa,UAAU,cAAc;AAC3G,KAAK;;AAEL;AACA;AACA;AACA;AACA,4CAA4C,UAAU,MAAM,aAAa;AACzE,KAAK;;AAEL;AACA,mCAAmC,IAAI,SAAS,IAAI;AACpD,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;;AAEA,0BAA0B,kBAAkB,SAAS,UAAU,IAAI,UAAU,GAAG,UAAU;AAC1F,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;;AAEA,0BAA0B,cAAc,SAAS,MAAM,IAAI,MAAM;AACjE;AACA;;;;;;;;;;;;;;AC/CA;AAAA;AAAA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;;;;;;;;;;;;;;ACZA;AAAA;AAAA;AAAgC;AACU;;AAE1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,8BAA8B,8CAAM;AACpC;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,+BAA+B,wDAAW;AAC1C;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,0BAA0B,wDAAW;AACrC,KAAK;;AAEL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,cAAc,8CAAM;AACpB;AACA;;AAEA;AACA,6BAA6B,wDAAW;AACxC;AACA;AACA,sBAAsB,+BAA+B,EAAE;;AAEvD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,8BAA8B,wDAAW;AACzC;;AAEA;AACA;AACA;;AAEA;AACA;AACA,8BAA8B,wDAAW;;AAEzC;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,4BAA4B,8CAAM,cAAc,gBAAgB,8CAAM,cAAc;AACpF;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,mCAAmC,MAAM;AACzC,qBAAqB,MAAM;;AAE3B,qBAAqB,wDAAW;AAChC,KAAK;;AAEL;AACA;;AAEA;AACA,8BAA8B,wDAAW;AACzC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,8BAA8B,wDAAW;;AAEzC;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,uBAAuB,wDAAW;AAClC,KAAK;;AAEL;AACA;;AAEA;AACA;;AAEA;AACA,yBAAyB,wDAAW;AACpC,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,6BAA6B,wDAAW;AACxC;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA,+BAA+B,wDAAW;AAC1C;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,8BAA8B,wDAAW;AACzC;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,8BAA8B,wDAAW;AACzC;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,iCAAiC,0BAA0B;AAC3D,gCAAgC,yBAAyB;;AAEzD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,8BAA8B,8CAAM,cAAc,GAAG,8CAAM,cAAc;AACzE;;AAEA;;AAEA,kDAAkD,aAAa,OAAO,cAAc;AACpF;AACA;;AAEA;AACA,mBAAmB,kBAAkB;AACrC;AACA;AACA;AACA;AACA,+BAA+B,SAAS;AACxC,8BAA8B,SAAS;;AAEvC;AACA;;AAEA;AACA;AACA,gEAAgE,iBAAiB;;AAEjF;AACA;;AAEA,gDAAgD,sBAAsB;AACtE,gDAAgD,qBAAqB;AACrE;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET,6BAA6B,gBAAgB;AAC7C,4BAA4B,eAAe;;AAE3C;;AAEA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,a","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./assets/js/index.js\");\n","import {helper} from \"./helper\";\r\n\r\nlet component = {\r\n    createSavedGameHTML: function (savedGame) {\r\n        let innerSavedGameText = this.buildInnerSavedGameText(savedGame);\r\n        return `<button data-state-id=\"${savedGame.stateId}\" class=\"load-game\">${innerSavedGameText}</button>`;\r\n    },\r\n\r\n    buildInnerSavedGameText: function(savedGame) {\r\n        let savedAtText = savedGame.savedAt,\r\n            fieldSizeText = savedGame.fieldSize,\r\n            gameTimeText = `${helper.addZero(savedGame.gameTime.min)}:${helper.addZero(savedGame.gameTime.sec)}`,\r\n            gameMovesText = savedGame.gameMoves;\r\n\r\n    return `${savedAtText}: ${fieldSizeText}x${fieldSizeText}, time:${gameTimeText}, moves:${gameMovesText}`;\r\n    },\r\n\r\n    createIconHTML: function (icon_name, icon_caption) {\r\n        if (icon_caption === undefined) {\r\n            icon_caption = \"\";\r\n        }\r\n        return `<i class=\"material-icons\">${icon_name}</i>${icon_caption}`;\r\n    },\r\n\r\n    createAudioHTML: function (key, src) {\r\n        return `<audio data-key=\"${key}\" src=\"${src}\"></audio>`;\r\n    },\r\n\r\n    createSizeOptionHTML: function (fieldSize, currentFieldSize) {\r\n        let selectedAttribute = '';\r\n\r\n        if(fieldSize === currentFieldSize) {\r\n            selectedAttribute = 'selected=\"selected\" ';\r\n        }\r\n\r\n        return `<option ${selectedAttribute}value=\"${fieldSize}\">${fieldSize}x${fieldSize}</option>`;\r\n    },\r\n\r\n    createFieldOptionHTML: function (field, currentField) {\r\n        let selectedField = '';\r\n\r\n        if(field === currentField) {\r\n            selectedField = 'selected=\"selected\" ';\r\n        }\r\n\r\n        return `<option ${selectedField}value=\"${field}\">${field}</option>`;\r\n    }\r\n}\r\n\r\nexport {component as builderHTML};","let component = {\r\n    addZero: function(n) {\r\n        return (parseInt(n, 10) < 10 ? '0' : '') + n;\r\n    },\r\n\r\n    getRandomStateGameId: function() {\r\n        return '_' + Math.random().toString(36).substr(2, 9);\r\n    },\r\n\r\n    getRandomInt: function(max) {\r\n        return Math.floor(Math.random() * Math.floor(max));\r\n    }\r\n}\r\n\r\nexport {component as helper};","import {helper} from \"./helper\";\r\nimport {builderHTML} from \"./builderHTML\";\r\n\r\nconst fieldHTML = document.createElement('div'),\r\n    overlayHTML = document.createElement('div'),\r\n    overlaySavedGamesHTML = document.createElement('div'),\r\n    newGameMenuHTML = document.createElement('button'),\r\n    boardHTML = document.createElement('div'),\r\n    movesHTML = document.createElement('div'),\r\n    pauseGameHTML = document.createElement('button'),\r\n    boxTimeHTML = document.createElement('div'),\r\n    timeHTML = document.createElement('time'),\r\n    gameSoundHTML = document.createElement('button'),\r\n    gameSounds = ['click-cell', 'sound-press'],\r\n    boxFieldSizeHTML = document.createElement('div'),\r\n    fieldSizeHTML = document.createElement('select'),\r\n    fieldSizes = [3, 4, 5, 6, 7, 8],\r\n    gameFields = ['numbers', 'image'],\r\n    saveGameHTML = document.createElement('button'),\r\n    savedGamesHTML = document.createElement('button'),\r\n    savedGamesContainerHTML = document.createElement('div'),\r\n    backButtonHTML = document.createElement('button'),\r\n    postscriptHTML = document.createElement('p'),\r\n    boxGameImageHTML = document.createElement('div'),\r\n    gameImageHTML = document.createElement('select');\r\nlet cellEmpty = {},\r\n    fieldSizeForSave = 0,\r\n    fieldSize = 4,\r\n    cellSize = 400 / fieldSize,\r\n    fieldCells = [],\r\n    cellsNumbers = Math.pow(fieldSize, 2) - 1,\r\n    fieldNumbers = [... Array(cellsNumbers).keys()],\r\n    gameMovesHtml = document.getElementsByClassName('game-moves'),\r\n    gameMoves = 0,\r\n    audioContainer = document.createElement('div'),\r\n    isGameSound = true,\r\n    stateId = null,\r\n    gameTime = new Date(0, 0, 0, 0, 0, 0),\r\n    gameTimeCounter,\r\n    isGameTimeCounting = false,\r\n    gameField = 'numbers',\r\n    gameFieldImageId = null;\r\n\r\nnewGameMenuHTML.addEventListener('click', startGame);\r\npauseGameHTML.addEventListener('click', pauseGame);\r\ngameSoundHTML.addEventListener('click', turnOffSound);\r\nfieldSizeHTML.addEventListener('change', handleFieldSizeChange);\r\nsaveGameHTML.addEventListener('click', saveGame);\r\nsavedGamesHTML.addEventListener('click', handleClickOnSavedGames);\r\nbackButtonHTML.addEventListener('click', handleClickOnBackButton);\r\ngameImageHTML.addEventListener('change', handleGameFieldChange);\r\n\r\nfunction setRandomGameFieldImage() {\r\n    let newGameFieldImageId = gameFieldImageId;\r\n\r\n    while(gameFieldImageId === newGameFieldImageId){\r\n        newGameFieldImageId = helper.getRandomInt(150);\r\n    }\r\n\r\n    gameFieldImageId = newGameFieldImageId;\r\n}\r\n\r\nfunction handleGameFieldChange() {\r\n    gameField = this.value;\r\n    setRandomGameFieldImage();\r\n}\r\n\r\nfunction handleClickOnBackButton() {\r\n    overlaySavedGamesHTML.remove();\r\n    overlayHTML.classList.remove('hidden');\r\n}\r\n\r\nfunction getSavedGameByStateId(stateId) {\r\n    let savedGames = JSON.parse(localStorage.getItem('savedGames')),\r\n        result = null;\r\n\r\n    savedGames.forEach(function (savedGame) {\r\n        if(savedGame.stateId === stateId) {\r\n            result = savedGame;\r\n        }\r\n    });\r\n\r\n    return result;\r\n}\r\n\r\nfunction handleClickOnSavedGame() {\r\n    let savedGame = getSavedGameByStateId(this.dataset.stateId);\r\n\r\n    resumeGame();\r\n    fieldCells = savedGame.fieldCells;\r\n    fieldNumbers = savedGame.fieldNumbers;\r\n\r\n    pauseGameHTML.disabled = false;\r\n\r\n    gameMoves = savedGame.gameMoves;\r\n    gameMovesHtml[0].innerHTML = savedGame.gameMoves;\r\n\r\n    fieldSize = savedGame.fieldSize;\r\n    cellSize = 400 / fieldSize;\r\n    fieldCells = [];\r\n    cellsNumbers = Math.pow(fieldSize, 2) - 1;\r\n\r\n    removeCells();\r\n    createCells();\r\n\r\n    isGameTimeCounting = true;\r\n    gameTime = new Date(0, 0, 0, 0, 0, 0);\r\n    gameTime.setMinutes(savedGame.gameTime.min);\r\n    gameTime.setSeconds(savedGame.gameTime.sec);\r\n\r\n    clearTimeout(gameTimeCounter);\r\n    showTime();\r\n\r\n    overlaySavedGamesHTML.remove();\r\n    overlayHTML.remove();\r\n\r\n    removeCells();\r\n    createCells();\r\n}\r\n\r\nfunction handleClickOnSavedGames() {\r\n    overlayHTML.classList.add('hidden');\r\n\r\n    overlaySavedGamesHTML.className = 'overlay';\r\n    fieldHTML.append(overlaySavedGamesHTML);\r\n\r\n    savedGamesContainerHTML.className = 'saved-games-container';\r\n    savedGamesContainerHTML.innerHTML = getSavedGamesHTML();\r\n    overlaySavedGamesHTML.append(savedGamesContainerHTML);\r\n\r\n    let loadGamesElements = document.getElementsByClassName('load-game');\r\n\r\n    for (let loadGamesElement of loadGamesElements) {\r\n        loadGamesElement.addEventListener('click', handleClickOnSavedGame);\r\n    }\r\n\r\n    backButtonHTML.classList.add('menu-item');\r\n    backButtonHTML.classList.add('back-button');\r\n    backButtonHTML.innerHTML = builderHTML.createIconHTML('arrow_back', 'Back');\r\n    overlaySavedGamesHTML.append(backButtonHTML);\r\n}\r\n\r\nfunction getSavedGamesHTML() {\r\n    let savedGamesHTML = '',\r\n        savedGames = JSON.parse(localStorage.getItem('savedGames'));\r\n\r\n    if(savedGames === null) {\r\n        savedGames = [];\r\n    }\r\n\r\n    savedGames.forEach(function (savedGame) {\r\n        savedGamesHTML += builderHTML.createSavedGameHTML(savedGame);\r\n    });\r\n\r\n    if(savedGames.length === 0) {\r\n        savedGamesHTML = '<p class=\"plain-text\">No saved games</p>'\r\n    }\r\n\r\n    return savedGamesHTML;\r\n}\r\n\r\nfunction prepareGameForSave() {\r\n    saveGameHTML.disabled = false;\r\n    stateId = helper.getRandomStateGameId();\r\n    fieldSizeForSave = fieldSize;\r\n}\r\n\r\nfunction saveGame() {\r\n    saveGameHTML.innerHTML = builderHTML.createIconHTML('check_circle_outline', 'Game is saved!');\r\n    let currentParamsGame = getParamsForSaveGame();\r\n    saveParamsToStorage(currentParamsGame);\r\n    setTimeout(() => {  saveGameHTML.disabled = true; }, 1500);\r\n\r\n}\r\n\r\nfunction getParamsForSaveGame() {\r\n    return {\r\n        stateId: stateId,\r\n        gameTime: {\r\n            min: gameTime.getMinutes(),\r\n            sec: gameTime.getSeconds()\r\n        },\r\n        gameMoves: gameMoves,\r\n        fieldSize: fieldSizeForSave,\r\n        fieldNumbers: fieldNumbers,\r\n        fieldCells: fieldCells,\r\n        savedAt: new Date().toLocaleDateString() + ' ' + new Date().toLocaleTimeString()\r\n    };\r\n}\r\n\r\nfunction saveParamsToStorage(params) {\r\n    let savedGames = JSON.parse(localStorage.getItem('savedGames')),\r\n        isReadyForSave = true;\r\n\r\n    if(savedGames === null) {\r\n        savedGames = [];\r\n    }\r\n\r\n    savedGames.forEach(function (saveGame) {\r\n        if (saveGame.stateId === stateId) {\r\n            isReadyForSave = false;\r\n        }\r\n    });\r\n\r\n    if (isReadyForSave) {\r\n        savedGames.push(params);\r\n        localStorage.setItem('savedGames', JSON.stringify(savedGames));\r\n    }\r\n}\r\n\r\nfunction handleFieldSizeChange() {\r\n    fieldSize = parseInt(this.value);\r\n    cellSize = 400 / fieldSize;\r\n    cellsNumbers = Math.pow(fieldSize, 2) - 1;\r\n    fieldNumbers = [... Array(cellsNumbers).keys()]\r\n        .sort(() => Math.random() - 0.5);\r\n}\r\n\r\nfunction turnOffSound () {\r\n    playSoundByKey('sound-press');\r\n\r\n    gameSoundHTML.innerHTML = builderHTML.createIconHTML(\"volume_off\");\r\n    isGameSound = false;\r\n\r\n    gameSoundHTML.removeEventListener('click', turnOffSound, false);\r\n    gameSoundHTML.addEventListener('click', turnOnSound);\r\n}\r\n\r\nfunction turnOnSound() {\r\n    isGameSound = true;\r\n    gameSoundHTML.innerHTML = builderHTML.createIconHTML(\"volume_up\");\r\n\r\n    gameSoundHTML.removeEventListener('click', turnOnSound, false);\r\n    gameSoundHTML.addEventListener('click', turnOffSound);\r\n\r\n    playSoundByKey('sound-press');\r\n}\r\n\r\nfunction showTime() {\r\n    let min = gameTime.getMinutes(),\r\n        sec = gameTime.getSeconds();\r\n\r\n    // Output Time\r\n    timeHTML.innerHTML = `${helper.addZero(min)}<span>:</span>${helper.addZero(sec)}`;\r\n    updateTime();\r\n    gameTimeCounter = setTimeout(showTime, 500);\r\n}\r\n\r\nfunction updateTime() {\r\n    if(isGameTimeCounting) {\r\n        gameTime.setMilliseconds(gameTime.getMilliseconds() + 500);\r\n    }\r\n}\r\n\r\nfunction playSoundByKey(key) {\r\n    let currentAudio;\r\n\r\n    if (isGameSound) {\r\n        currentAudio = document.querySelector('audio[data-key=' + key + ']');\r\n        currentAudio.currentTime = 0;\r\n        currentAudio.play();\r\n    }\r\n}\r\n\r\nfunction createAudio() {\r\n    let audioHtml = '';\r\n\r\n    gameSounds.forEach(function (sound) {\r\n        let src = `./media/sound/${sound}.mp3`,\r\n            key = `${sound}`;\r\n\r\n        audioHtml += builderHTML.createAudioHTML(key, src);\r\n    });\r\n\r\n    return audioHtml;\r\n}\r\n\r\nfunction resumeGame() {\r\n    pauseGameHTML.innerHTML = builderHTML.createIconHTML('pause_circle_outline', 'Pause Game');\r\n    isGameTimeCounting = true;\r\n    pauseGameHTML.removeEventListener('click', resumeGame, false);\r\n    pauseGameHTML.addEventListener('click', pauseGame);\r\n    overlayHTML.remove();\r\n}\r\n\r\nfunction pauseGame() {\r\n    isGameTimeCounting = false;\r\n    addOverlay();\r\n    pauseGameHTML.innerHTML = builderHTML.createIconHTML('play_circle_outline', 'Resume Game');\r\n\r\n    prepareGameForSave();\r\n\r\n    pauseGameHTML.removeEventListener('click', pauseGame, false);\r\n    pauseGameHTML.addEventListener('click', resumeGame);\r\n}\r\n\r\nfunction startGame() {\r\n    resumeGame();\r\n    fieldCells = [];\r\n    fieldNumbers = [... Array(cellsNumbers).keys()]\r\n        .sort(() => Math.random() - 0.5);\r\n    pauseGameHTML.disabled = false;\r\n    gameMoves = 0;\r\n    gameMovesHtml[0].innerHTML = 0;\r\n\r\n    if (isGameImage()) {\r\n        setRandomGameFieldImage();\r\n    }\r\n\r\n    removeCells();\r\n    createCells();\r\n\r\n    isGameTimeCounting = true;\r\n    gameTime = new Date(0, 0, 0, 0, 0, 0);\r\n    clearTimeout(gameTimeCounter);\r\n    showTime();\r\n}\r\n\r\nfunction increaseGameMovesHtml() {\r\n    gameMovesHtml[0].innerHTML = ++gameMoves;\r\n}\r\n\r\nfunction getOptionsHTML() {\r\n    let optionsHTML = '';\r\n\r\n    fieldSizes.forEach(function (field_size) {\r\n        optionsHTML += builderHTML.createSizeOptionHTML(field_size, fieldSize);\r\n    });\r\n\r\n    return optionsHTML;\r\n}\r\n\r\nfunction getGameFieldOptionsHTML() {\r\n    let gameFieldHTML = '';\r\n\r\n    gameFields.forEach(function (field) {\r\n        gameFieldHTML += builderHTML.createFieldOptionHTML(field, gameField);\r\n    });\r\n\r\n    return gameFieldHTML;\r\n}\r\n\r\nfunction isGameImage() {\r\n    return gameField === 'image';\r\n}\r\n\r\nfunction addOverlay() {\r\n    saveGameHTML.disabled = true;\r\n    saveGameHTML.classList.add('menu-item');\r\n    saveGameHTML.classList.add('save-game');\r\n    saveGameHTML.innerHTML = builderHTML.createIconHTML('save', 'Save this game');\r\n    overlayHTML.append(saveGameHTML);\r\n\r\n    newGameMenuHTML.className = 'menu-item';\r\n    newGameMenuHTML.innerHTML = 'New Game';\r\n    overlayHTML.append(newGameMenuHTML);\r\n\r\n    boxFieldSizeHTML.className = 'field-option';\r\n    boxFieldSizeHTML.innerHTML = '<span class=\"field-option-title\">Field size</span>';\r\n    overlayHTML.append(boxFieldSizeHTML);\r\n    fieldSizeHTML.className = 'field-option-select';\r\n    fieldSizeHTML.innerHTML = getOptionsHTML();\r\n    boxFieldSizeHTML.append(fieldSizeHTML);\r\n\r\n    boxGameImageHTML.className = 'field-option';\r\n    boxGameImageHTML.innerHTML = '<span class=\"field-option-title\">Game field</span>';\r\n    overlayHTML.append(boxGameImageHTML);\r\n    gameImageHTML.className = 'field-option-select';\r\n    gameImageHTML.innerHTML = getGameFieldOptionsHTML();\r\n    boxGameImageHTML.append(gameImageHTML);\r\n\r\n\r\n    savedGamesHTML.className = 'menu-item';\r\n    savedGamesHTML.innerHTML = builderHTML.createIconHTML('history', 'Saved games');\r\n    overlayHTML.append(savedGamesHTML);\r\n\r\n    postscriptHTML.className = 'postscript';\r\n    postscriptHTML.innerHTML = 'Attention: The minimum width for the correct display of the application design is 414px. Below this value, the application may behave incorrectly.';\r\n    overlayHTML.append(postscriptHTML);\r\n\r\n    overlayHTML.className = 'overlay';\r\n    fieldHTML.append(overlayHTML);\r\n}\r\n\r\nfunction createGameHTML() {\r\n    audioContainer.innerHTML = createAudio();\r\n    document.body.append(audioContainer);\r\n\r\n    boardHTML.className = 'board';\r\n    document.body.append(boardHTML);\r\n\r\n    addOverlay();\r\n\r\n    boxTimeHTML.className = 'boxTime';\r\n    boxTimeHTML.innerHTML = '<span class=\"descriptionTime\">Time</span>'\r\n    boardHTML.append(boxTimeHTML);\r\n    timeHTML.id = 'time';\r\n    timeHTML.innerHTML = '00:00';\r\n    boxTimeHTML.append(timeHTML);\r\n\r\n    movesHTML.className = 'moves';\r\n    boardHTML.append(movesHTML);\r\n\r\n    pauseGameHTML.disabled = true;\r\n    pauseGameHTML.className = 'pauseGame';\r\n    pauseGameHTML.innerHTML = builderHTML.createIconHTML('pause_circle_outline', 'Pause Game');\r\n    boardHTML.append(pauseGameHTML);\r\n\r\n    movesHTML.innerHTML = '<span class=\"description\">Moves</span><span class=\"game-moves\"></span>';\r\n    gameMovesHtml[0].innerHTML = 0;\r\n\r\n    fieldHTML.className = 'field';\r\n    document.body.append(fieldHTML);\r\n\r\n    gameSoundHTML.className = 'sound';\r\n    gameSoundHTML.innerHTML = builderHTML.createIconHTML(\"volume_up\");\r\n    document.body.append(gameSoundHTML);\r\n}\r\n\r\nfunction move(index) {\r\n    const cell = fieldCells[index];\r\n    const leftDiff = Math.abs(cellEmpty.left - cell.left);\r\n    const topDiff = Math.abs(cellEmpty.top - cell.top);\r\n\r\n    if (leftDiff+topDiff > 1) {\r\n        return;\r\n    }\r\n\r\n    cell.element.style.left = `${cellEmpty.left * cellSize}px`;\r\n    cell.element.style.top = `${cellEmpty.top * cellSize}px`;\r\n\r\n    const cellEmptyLeft = cellEmpty.left;\r\n    const cellEmptyTop = cellEmpty.top;\r\n    cellEmpty.left = cell.left;\r\n    cellEmpty.top = cell.top;\r\n    cell.left = cellEmptyLeft;\r\n    cell.top = cellEmptyTop;\r\n\r\n    increaseGameMovesHtml();\r\n    playSoundByKey('click-cell');\r\n\r\n    const isFinished = fieldCells.every(cell => {\r\n        if(cell.value > 0) {\r\n            return cell.value - 1 === cell.top * fieldSize + cell.left;\r\n        } else {\r\n            return true;\r\n        }\r\n    });\r\n\r\n    if(isFinished) {\r\n        let min = gameTime.getMinutes(),\r\n            sec = gameTime.getSeconds(),\r\n            finishedTime = `${helper.addZero(min)}:${helper.addZero(sec)}`,\r\n            finishedMoves = gameMoves;\r\n\r\n        isGameTimeCounting = false;\r\n\r\n        alert(`Hurrah! You solved the puzzle in ${finishedTime} and ${finishedMoves} moves.`);\r\n    }\r\n}\r\n\r\nfunction createCells() {\r\n    for (let i = 0; i < cellsNumbers; i++) {\r\n        const cell = document.createElement('div');\r\n        const value = fieldNumbers[i] + 1;\r\n        cell.classList.add('cell');\r\n        cell.innerHTML = value;\r\n        cell.style.height = `${cellSize}px`;\r\n        cell.style.width = `${cellSize}px`;\r\n\r\n        const left = i % fieldSize;\r\n        const top = (i - left) / fieldSize;\r\n\r\n        if(isGameImage()) {\r\n            cell.classList.add('cell-image');\r\n            cell.style.backgroundImage = `url('./media/fields/${gameFieldImageId}.jpg')`;\r\n\r\n            const leftValue = fieldNumbers[i] % fieldSize;\r\n            const topValue = Math.trunc(fieldNumbers[i] / fieldSize);\r\n\r\n            cell.style.backgroundPositionX = `${-leftValue * cellSize}px`;\r\n            cell.style.backgroundPositionY = `${-topValue * cellSize}px`;\r\n        }\r\n\r\n        fieldCells.push({\r\n            value: value,\r\n            left: left,\r\n            top: top,\r\n            element: cell\r\n        });\r\n\r\n        cell.style.left = `${left * cellSize}px`;\r\n        cell.style.top = `${top * cellSize}px`;\r\n\r\n        fieldHTML.append(cell);\r\n\r\n        cell.addEventListener('click', () => {\r\n            move(i);\r\n        })\r\n    }\r\n\r\n    cellEmpty = {\r\n        value: 0,\r\n        top: fieldSize - 1,\r\n        left: fieldSize - 1\r\n    };\r\n\r\n    fieldCells.push(cellEmpty);\r\n}\r\n\r\nfunction removeCells() {\r\n    fieldHTML.innerHTML = '';\r\n}\r\n\r\nfunction createGame() {\r\n    createGameHTML();\r\n    createCells();\r\n}\r\n\r\ncreateGame();"],"sourceRoot":""}